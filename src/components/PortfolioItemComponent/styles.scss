@use '../../styles/constants' as *;

$animation-delay: 0.3s;
$duration-card-bounce: 1s;
$delay-underline: $animation-delay + $duration-card-bounce + 0.1s;
$card-shadow: $planck-length * 4;

@mixin box-shadow($scale: 1) {
    $card-shadow-calculated: calc($planck-length * 5 * $scale);

    box-shadow:
        $card-shadow-calculated $card-shadow-calculated $card-shadow-calculated rgba($color-black, 0.9),
        -#{$card-shadow-calculated} -#{$card-shadow-calculated} $card-shadow-calculated rgba($color-white, 0.9);
}

.PortfolioItemComponent {
    display: inline-block;
    box-sizing: border-box;
    width: 100%;
    min-height: calc($planck-length * 25);
    padding: calc($planck-length * 4);

    color: $color-white;

    background-color: transparent;
    background-image: linear-gradient(to bottom right, rgba($color-black, 0.2), $color-white);
    background-clip: padding-box;
    border: solid calc($planck-length / 2) $color-gray-medium;
    border-radius: $border-radius-large;
    transform: scale(0.9);

    animation-name: animation-card-pop;
    animation-duration: $duration-card-bounce;
    animation-play-state: paused;
    animation-timing-function: $transition-timing-function-default;
    animation-delay: $animation-delay;
    animation-fill-mode: forwards;

    @media only screen and (min-width: $breakpoint-medium) {
        border: solid $planck-length $color-gray-medium;
    }

    &--visible {
        animation-play-state: running;
    }

    &__inner {
        position: relative;

        display: flex;
        align-items: center;
        justify-content: flex-end;
        width: 100%;
        height: 100%;
    }

    &__image {
        position: absolute;
        z-index: 1;

        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
        overflow: hidden;

        background-color: $color-white-arctic;
        border-radius: $border-radius-large;
        box-shadow:
            5px 5px 10px $color-black,
            -5px -5px 10px $color-white;
    }

    &__placard {
        z-index: 2;

        display: flex;
        flex-direction: column;
        align-items: flex-end;
        justify-content: space-between;
        box-sizing: border-box;
        width: 80%;
        min-height: calc($planck-length * 50);
        padding: calc($planck-length * 3);

        color: $color-white;

        background-color: rgba($color-black, 0.85);
        border-radius: 0 $border-radius-large $border-radius-large 0;

        @media only screen and (min-width: $breakpoint-medium) {
            width: 50%;
        }
    }

    &__card-title {
        position: relative;

        &::after {
            position: absolute;
            right: 0;
            bottom: -#{$planck-length};
            z-index: -1;

            height: calc($planck-length * 3);

            background-image: linear-gradient(to right, $color-blue, rgba($color-white, 0.4));
            opacity: 0.6;

            animation-name: animation-title-accent;
            animation-duration: 0.3s;
            animation-play-state: paused;
            animation-timing-function: $transition-timing-function-default;
            animation-delay: $delay-underline;
            animation-fill-mode: forwards;

            content: '';

            @media only screen and (min-width: $breakpoint-medium) {
                bottom: 0;
            }
        }

        &--visible {
            &::after {
                animation-play-state: running;
            }
        }
    }
}

@keyframes animation-card-pop {
    0% {
        @include box-shadow(0);
    }

    30% {
        @include box-shadow(2);
    }

    40% {
        @include box-shadow(0.5);
    }

    50% {
        @include box-shadow(1.25);
    }

    60% {
        @include box-shadow(0.75);
    }

    70% {
        @include box-shadow(1.125);
    }

    80% {
        @include box-shadow(0.875);
    }

    90% {
        @include box-shadow(1.0625);
    }

    100% {
        @include box-shadow();
    }
}
@keyframes animation-title-accent {
    from {
        width: 0;
    }

    to {
        width: calc(100% + #{$planck-length * 7});
    }
}

@media only screen and (min-width: $breakpoint-medium) {
    @keyframes animation-title-accent {
        from {
            width: 0;
        }

        to {
            width: calc(100% + #{$planck-length * 10});
        }
    }
}
