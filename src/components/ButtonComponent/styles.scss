@import '../../styles/constants';
@import '../../styles/mixins';

$button-height: 5px;
$scale-hover: 0.95;
$scale-active: 0.9;

@mixin box-shadow($scale: 1, $inset: false) {
    $box-shadow-size: if($inset, 0, #{$button-height * $scale});
    $box-shadow-size-inset: if($inset, #{$button-height * $scale}, 0);

    box-shadow: $box-shadow-size $box-shadow-size $box-shadow-size rgba($color-black, 0.9), -#{$box-shadow-size} -#{$box-shadow-size} $box-shadow-size rgba($color-white, 0.9), $box-shadow-size-inset $box-shadow-size-inset $box-shadow-size-inset rgba($color-black, 0.9) inset, -#{$box-shadow-size-inset} -#{$box-shadow-size-inset} $box-shadow-size-inset rgba($color-white, 0.9) inset;
}

%button {
    display: flex;
    align-items: center;
    justify-content: center;
    float: left;
    box-sizing: border-box;
    min-width: #{$planck-length * 14};
    height: #{$planck-length * 6};
    padding: 0 #{$planck-length};

    font-weight: bold;
    font-size: $font-size-regular;
    line-height: $font-size-regular;
    text-transform: uppercase;
    text-decoration: none;

    border-radius: $border-radius-default;

    @media only screen and (min-width: $breakpoint-small) {
        min-width: #{$planck-length * 18};
    }
}

.ButtonComponent {
    padding: 0;

    font-family: $font-stack;

    background-color: transparent;
    border: none;
    outline: none;
    cursor: pointer;

    transition: background-color $transition-timing-function-default $transition-slow, color $transition-timing-function-default $transition-slow, box-shadow $transition-timing-function-default $transition-slow;

    & + .ButtonComponent {
        margin-left: #{$planck-length * 3};

        @media only screen and (min-width: $breakpoint-small) {
            margin-left: #{$planck-length * 4};
        }
    }

    &__label {
        transition: transform $transition-timing-function-default $transition-slow;
    }

    &--aligned-right {
        float: right;
    }

    &--primary {
        @extend %button;

        &-dark {
            color: $color-white;

            background-color: $color-blue;

            &:hover {
                @include is-desktop() {
                    background-color: darken($color: $color-blue, $amount: 10%);
                }
            }
        }

        &-light {
            color: $color-blue;

            background-color: $color-white;

            &:hover {
                @include is-desktop() {
                    color: $color-white;

                    background-color: $color-blue;
                }
            }
        }
    }

    &--secondary {
        @extend %button;

        color: $color-blue;

        background-color: transparent;
        border-style: solid;
        border-width: 1px;

        &-dark {
            color: $color-blue;

            border-color: $color-blue;

            &:hover {
                @include is-desktop() {
                    color: $color-white;

                    background-color: $color-blue;
                }
            }
        }

        &-light {
            color: $color-white;

            border-color: $color-white;

            &:hover {
                @include is-desktop() {
                    color: $color-blue;

                    background-color: $color-white;
                }
            }
        }
    }

    &--neumorphic {
        @extend %button;

        background-color: transparent;
        border: none;

        span {
            color: transparent;

            background-clip: text;
        }

        &:hover {
            @include is-desktop() {
                @include box-shadow(0);

                animation: none;

                span {
                    transform: scale($scale-hover);
                }
            }
        }

        &:active {
            @include is-desktop() {
                @include box-shadow(1, true);

                animation: none;

                span {
                    transform: scale($scale-active);
                }
            }
        }

        &-dark {
            @include box-shadow();

            span {
                text-shadow: 1px 1px 1px rgba($color-white, 0.9);

                background-color: $color-black;
            }
        }

        &-light {
            @include box-shadow();

            span {
                text-shadow: 1px 1px 1px rgba($color-white, 0.3);

                background-color: $color-blue;
            }
        }

        &-animated {
            animation-name: bounce;
            animation-duration: 1s;
            animation-play-state: paused;
            animation-timing-function: cubic-bezier(0.38, 0.2, 0.36, 0.95);
            animation-fill-mode: initial;
        }

        &-visible {
            animation-play-state: running;
        }
    }

    &--inline {
        margin: 0;
        padding: 0;

        font-weight: inherit;
        font-size: inherit;
        text-decoration: underline;

        background-color: transparent;

        & + .ButtonComponent {
            margin-left: 0;
        }

        &-dark {
            color: $color-blue;
        }

        &-light {
            color: $color-white;
        }

        &-inherit-styling {
            color: inherit;
            text-decoration: inherit;
        }
    }

    &--anchor {
        display: inline-flex;
    }

    &--full-width {
        width: 100%;
    }
}

@keyframes bounce {
    0% {
        @include box-shadow(0);
    }

    30% {
        @include box-shadow(2);
    }

    40% {
        @include box-shadow(0.5);
    }

    50% {
        @include box-shadow(1.25);
    }

    60% {
        @include box-shadow(0.75);
    }

    70% {
        @include box-shadow(1.125);
    }

    80% {
        @include box-shadow(0.875);
    }

    90% {
        @include box-shadow(1.0625);
    }

    100% {
        @include box-shadow();
    }
}
@keyframes bounce-label {
    0% {
        transform: scale($scale-hover);
    }

    30% {
        transform: scale(1.2);
    }

    40% {
        transform: scale(0.8);
    }

    50% {
        transform: scale(1.1);
    }

    60% {
        transform: scale(0.9);
    }

    70% {
        transform: scale(1.05);
    }

    80% {
        transform: scale(0.95);
    }

    90% {
        transform: scale(1.025);
    }

    100% {
        transform: scale(1);
    }
}
